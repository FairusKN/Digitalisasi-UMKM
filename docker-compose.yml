services:
  php:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: umkm
    environment:
      - APP_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./backend:/var/www/backend
    networks:
      - appnet
    working_dir: /var/www/backend
    command: >
      sh -c "chown -R www-data:www-data /var/www/backend/storage /var/www/backend/bootstrap/cache &&
             php-fpm"

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/var/www/frontend:ro
      - ./backend:/var/www/backend
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - php
    networks:
      - appnet

  # Vue dev server (for hot reload)
  frontend:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules # don't leak node_modules to host
    command: sh -c "yarn install && yarn dev --host 0.0.0.0"
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - appnet

  # Vue build (for production)
  frontend-build:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./frontend/dist:/app/dist
    command: sh -c "yarn install && yarn build"
    networks:
      - appnet

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - appnet

  adminer:
    image: adminer:latest
    ports:
      - "8082:8080"
    networks:
      - appnet

networks:
  appnet:
volumes:
  db_data:
  php_storage:
  php_bootstrap:
  php_vendor:

